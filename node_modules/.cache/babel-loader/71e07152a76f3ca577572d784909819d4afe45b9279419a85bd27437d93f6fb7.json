{"ast":null,"code":"var _jsxFileName = \"/Users/johnpaulreju/Langrasph/chatbot/src/components/sidebar.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faBars, faTimes } from '@fortawesome/free-solid-svg-icons'; \n\n// function Sidebar({ sessions, setSessionId }) {\n//   const [isOpen, setIsOpen] = useState(true);\n\n//   const toggleSidebar = () => setIsOpen(!isOpen);\n\n//   return (\n//     <>\n//       <button onClick={toggleSidebar} style={styles.toggleButton}>\n//         <FontAwesomeIcon icon={isOpen ? faTimes : faBars} /> {/* Toggle icon */}\n//       </button>\n\n//       <div style={isOpen ? styles.sidebarOpen : styles.sidebarClosed}>\n//         <h3>Chat History</h3>\n//         {sessions.length === 0 ? (\n//           <p>No previous chats</p>\n//         ) : (\n//           <ul>\n//             {sessions.map((session) => (\n//               <li key={session} onClick={() => setSessionId(session)}>\n//                 {session}\n//               </li>\n//             ))}\n//           </ul>\n//         )}\n//       </div>\n//     </>\n//   );\n// }\n\n// const styles = {\n//   toggleButton: {\n//     position: 'absolute',\n//     top: '10px',\n//     left: '10px',\n//     zIndex: 1000,\n//     background: 'none',\n//     border: 'none',\n//     cursor: 'pointer',\n//     fontSize: '20px',\n//     color: '#333',\n//   },\n//   sidebarOpen: {\n//     width: '300px',\n//     height: '100%',\n//     backgroundColor: '#333',\n//     color: '#fff',\n//     overflowY: 'auto',\n//     padding: '20px',\n//     transition: '0.3s',\n//     zIndex: 999,\n//   },\n//   sidebarClosed: {\n//     width: '0',\n//     height: '100%',\n//     overflow: 'hidden',\n//     transition: '0.3s',\n//   },\n//   historyList: {\n//     marginTop: '20px',\n//     listStyleType: 'none',\n//     padding: '0',\n//   },\n//   historyItem: {\n//     padding: '10px',\n//     borderBottom: '1px solid #555',\n//     cursor: 'pointer',\n//     color: '#fff',\n//   },\n// };\n\n// export default Sidebar;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Sidebar({\n  sessions,\n  loadSession\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(true);\n  const toggleSidebar = () => setIsOpen(!isOpen);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleSidebar,\n      style: styles.toggleButton,\n      children: isOpen ? 'Close' : 'Open'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: isOpen ? styles.sidebarOpen : styles.sidebarClosed,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chat History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: sessions.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No previous chats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this) : sessions.map(session => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => loadSession(session),\n          children: session\n        }, session, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Sidebar, \"mEi83NlPXQzy/XIDfTYWzOSvaHw=\");\n_c = Sidebar;\nconst styles = {\n  toggleButton: {\n    position: 'absolute',\n    top: '10px',\n    left: '10px',\n    zIndex: 1000\n  },\n  sidebarOpen: {\n    width: '300px',\n    height: '100%',\n    backgroundColor: '#333',\n    color: '#fff',\n    overflowY: 'auto',\n    padding: '20px',\n    transition: '0.3s'\n  },\n  sidebarClosed: {\n    width: '0',\n    height: '100%',\n    overflow: 'hidden',\n    transition: '0.3s'\n  }\n};\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Sidebar","sessions","loadSession","_s","isOpen","setIsOpen","toggleSidebar","children","onClick","style","styles","toggleButton","fileName","_jsxFileName","lineNumber","columnNumber","sidebarOpen","sidebarClosed","length","map","session","_c","position","top","left","zIndex","width","height","backgroundColor","color","overflowY","padding","transition","overflow","$RefreshReg$"],"sources":["/Users/johnpaulreju/Langrasph/chatbot/src/components/sidebar.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faBars, faTimes } from '@fortawesome/free-solid-svg-icons'; \n\n// function Sidebar({ sessions, setSessionId }) {\n//   const [isOpen, setIsOpen] = useState(true);\n\n//   const toggleSidebar = () => setIsOpen(!isOpen);\n\n//   return (\n//     <>\n//       <button onClick={toggleSidebar} style={styles.toggleButton}>\n//         <FontAwesomeIcon icon={isOpen ? faTimes : faBars} /> {/* Toggle icon */}\n//       </button>\n\n//       <div style={isOpen ? styles.sidebarOpen : styles.sidebarClosed}>\n//         <h3>Chat History</h3>\n//         {sessions.length === 0 ? (\n//           <p>No previous chats</p>\n//         ) : (\n//           <ul>\n//             {sessions.map((session) => (\n//               <li key={session} onClick={() => setSessionId(session)}>\n//                 {session}\n//               </li>\n//             ))}\n//           </ul>\n//         )}\n//       </div>\n//     </>\n//   );\n// }\n\n\n// const styles = {\n//   toggleButton: {\n//     position: 'absolute',\n//     top: '10px',\n//     left: '10px',\n//     zIndex: 1000,\n//     background: 'none',\n//     border: 'none',\n//     cursor: 'pointer',\n//     fontSize: '20px',\n//     color: '#333',\n//   },\n//   sidebarOpen: {\n//     width: '300px',\n//     height: '100%',\n//     backgroundColor: '#333',\n//     color: '#fff',\n//     overflowY: 'auto',\n//     padding: '20px',\n//     transition: '0.3s',\n//     zIndex: 999,\n//   },\n//   sidebarClosed: {\n//     width: '0',\n//     height: '100%',\n//     overflow: 'hidden',\n//     transition: '0.3s',\n//   },\n//   historyList: {\n//     marginTop: '20px',\n//     listStyleType: 'none',\n//     padding: '0',\n//   },\n//   historyItem: {\n//     padding: '10px',\n//     borderBottom: '1px solid #555',\n//     cursor: 'pointer',\n//     color: '#fff',\n//   },\n// };\n\n// export default Sidebar;\n\nimport React, { useState } from 'react';\n\nfunction Sidebar({ sessions, loadSession }) {\n  const [isOpen, setIsOpen] = useState(true);\n\n  const toggleSidebar = () => setIsOpen(!isOpen);\n\n  return (\n    <>\n      <button onClick={toggleSidebar} style={styles.toggleButton}>\n        {isOpen ? 'Close' : 'Open'}\n      </button>\n\n      <div style={isOpen ? styles.sidebarOpen : styles.sidebarClosed}>\n        <h3>Chat History</h3>\n        <ul>\n          {sessions.length === 0 ? (\n            <li>No previous chats</li>\n          ) : (\n            sessions.map((session) => (\n              <li key={session} onClick={() => loadSession(session)}>\n                {session}\n              </li>\n            ))\n          )}\n        </ul>\n      </div>\n    </>\n  );\n}\n\nconst styles = {\n  toggleButton: {\n    position: 'absolute',\n    top: '10px',\n    left: '10px',\n    zIndex: 1000,\n  },\n  sidebarOpen: {\n    width: '300px',\n    height: '100%',\n    backgroundColor: '#333',\n    color: '#fff',\n    overflowY: 'auto',\n    padding: '20px',\n    transition: '0.3s',\n  },\n  sidebarClosed: {\n    width: '0',\n    height: '100%',\n    overflow: 'hidden',\n    transition: '0.3s',\n  },\n};\n\nexport default Sidebar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}